apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: servicemesh-federation-policy
  # Must be a recognized policy namespace on the hub
  namespace: acm-policies
spec:
  remediationAction: enforce
  disabled: false
  hubTemplateOptions:
    serviceAccountName: policy-admin
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: servicemesh-federation-policy
        spec:
          remediationAction: enforce
          severity: low
          object-templates-raw: |-
            - complianceType: mustonlyhave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: cacerts
                  namespace: 'istio-system'
                type: Opaque
                data:
                  ca-cert.pem: {{hub (index (lookup "v1" "Secret" .metadata.name "intermediate-ca").data "tls.crt") hub}}
                  ca-key.pem: {{hub (index (lookup "v1" "Secret" .metadata.name "intermediate-ca").data "tls.key") hub}}
                  root-cert.pem: {{hub (index (lookup "v1" "Secret" "cert-manager" "root-ca").data "tls.crt") hub}}
                  cert-chain.pem: {{hub (list ((index (lookup "v1" "Secret" .metadata.name "intermediate-ca").data "tls.crt") | base64dec) ((index (lookup "v1" "Secret" "cert-manager" "root-ca").data "tls.crt") | base64dec)) | join "\n" | base64enc hub}}
            {{hub $clusterName := .ManagedClusterName hub}}
            {{hub range (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items hub}}
            {{hub if eq (index .metadata.labels "servicemesh-federation") "enabled" hub}}
            {{hub if not (eq .metadata.name $clusterName) hub}}
            - complianceType: mustonlyhave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: istio-remote-secret-{{hub .metadata.name hub}}
                  namespace: 'istio-system'
                  labels:
                    "istio/multiCluster": "true"
                  annotations:
                    "networking.istio.io/cluster": env.ctx
                type: Opaque
                stringData:
                  {{hub .metadata.name hub}}: |-
                    apiVersion: v1
                    kind: Config
                    clusters:
                    - name: {{hub .metadata.name hub}}
                      cluster:
                        certificate-authority-data: {{hub (index .spec.managedClusterClientConfigs 0).caBundle hub}}
                        server: {{hub (index .spec.managedClusterClientConfigs 0).url hub}}
                    contexts:
                    - name: istio-reader-service-account/{{hub .metadata.name hub}}
                      context:
                        cluster: {{hub .metadata.name hub}}
                        namespace: istio-system
                        user: istio-reader-service-account
                    users:
                    - name: istio-reader-service-account
                      user:
                        token: {{hub (lookup "v1" "Secret" .metadata.name "istio-reader-service-account").data.token | base64dec hub}}
                    current-context: istio-reader-service-account/{{hub .metadata.name hub}}
            {{hub end hub}}
            {{hub end hub}}
            {{hub end hub}}
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: servicemesh-federation-placement
  namespace: acm-policies
spec:
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchLabels:
            servicemesh-federation: "enabled"
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: servicemesh-federation-binding
  namespace: acm-policies
subjects:
  - kind: Policy
    apiGroup: policy.open-cluster-management.io
    name: servicemesh-federation-policy
placementRef:
  kind: Placement
  apiGroup: cluster.open-cluster-management.io
  name: servicemesh-federation-placement